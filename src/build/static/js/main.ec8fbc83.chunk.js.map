{"version":3,"sources":["components/NavBar/Drawer.js","components/NavBar/index.js","components/ProjectList/index.js","api-requests/index.js","pages/Home.js","components/PostForm/index.jsx","pages/CreatePost.js","pages/About.js","pages/Help.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","minWidth","TemporaryDrawer","open","setOpen","dark","setDark","classes","Drawer","anchor","onClose","prev","className","role","List","ListItem","button","onClick","component","Link","to","ListItemIcon","ListItemText","primary","theme","root","flexGrow","toolbar","display","justifyContent","menuButton","marginRight","spacing","title","textDecoration","color","Navbar","useState","useTheme","mobile","useMediaQuery","breakpoints","down","AppBar","position","Toolbar","Typography","variant","IconButton","Button","Tooltip","Idea","author","projectName","contactInfo","projectDescription","tagsString","styles","card","margin","Card","CardContent","Ideas","sm","md","up","lg","xl","Box","gridTemplateColumns","map","x","index","getProjects","fetch","then","response","json","getTags","res","tagSelect","Home","data","setData","tags","setTags","selTags","setSelTags","useEffect","Object","values","length","join","getProjectsUsingTags","tag","name","flexDirection","align","Autocomplete","multiple","value","options","getOptionLabel","onChange","_","renderTags","getTagProps","option","Chip","avatar","Avatar","count","label","renderInput","params","TextField","placeholder","ProjectList","form","paddingTop","maxWidth","alignSelf","formItem","marginBottom","header","textAlign","PostForm","submitForm","useForm","control","handleSubmit","formState","body","onSubmit","defaultValue","rules","required","render","field","error","fieldState","helperText","message","undefined","split","freeSolo","disabled","isSubmitting","type","postPage","height","collasp","marginTop","CreatePost","successAlert","setSuccess","failAlert","setFailAlert","Collapse","in","Alert","action","aria-label","size","fontSize","severity","project","method","headers","Accept","JSON","stringify","postProject","status","About","Help","createMuiTheme","palette","main","teal","secondary","green","App","prefersDarkMode","ThemeProvider","CssBaseline","NavBar","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec8fbc83.chunk.js","sourcesContent":["import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Create from '@material-ui/icons/Create';\nimport Info from '@material-ui/icons/Info';\nimport Help from '@material-ui/icons/Help';\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { NavLink as Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n        minWidth: '40vw'\n    },\n});\n\nexport default function TemporaryDrawer({ open, setOpen, dark, setDark }) {\n    const classes = useStyles();\n    return (\n        <div>\n            <Drawer anchor=\"left\" open={open} onClose={() => setOpen(prev => !prev)}>\n                <div\n                    className={classes.fullList}\n                    role=\"presentation\"\n                >\n                    <List>\n                        <ListItem button onClick={() => setOpen(prev => !prev)} component={Link} to=\"/about\">\n                            <ListItemIcon><Info /></ListItemIcon>\n                            <ListItemText primary={\"About\"} />\n                        </ListItem>\n                        <ListItem button onClick={() => setOpen(prev => !prev)} component={Link} to=\"/createPost\">\n                            <ListItemIcon><Create /></ListItemIcon>\n                            <ListItemText primary={\"Create Post\"} />\n                        </ListItem>\n                        <ListItem button onClick={() => setOpen(prev => !prev)} component={Link} to=\"/help\">\n                            <ListItemIcon><Help/></ListItemIcon>\n                            <ListItemText primary={\"Help!\"} />\n                        </ListItem>\n                      <ListItem button onClick={() => setOpen(prev => !prev)} onClick={() => setDark(prev => !prev)}>\n                            <ListItemIcon> {dark ? <Brightness6 /> : <Brightness7 />}</ListItemIcon>\n                            <ListItemText primary={`Set ${dark ? \"Light\" : \"Dark\" } Theme`} />\n                        </ListItem>\n                    </List>\n                </div>\n\n            </Drawer>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Drawer from \"./Drawer\"\n\nimport { NavLink as Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n}));\n\nconst Navbar = ({ setDark, dark }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false)\n  const theme = useTheme()\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"h6\" component={Link} to='/'>\n                We Connect\n          </Typography>\n          {\n            mobile &&\n            <>\n              <Drawer dark={dark} setDark={setDark} open={open} setOpen={() => setOpen(prev => !prev)} />\n              <IconButton onClick={() => setOpen(prev => !prev)}>\n                <Menu />\n              </IconButton>\n            </>\n          }\n\n          {\n            !mobile &&\n            <>\n              <div>\n                <Button color=\"inherit\" component={Link} to='createPost'>Create Post</Button>\n                <Button color=\"inherit\" component={Link} to='about'>About</Button>\n                <Button color=\"inherit\" component={Link} to='/help'>Help</Button>\n                <Tooltip title=\"Set Dark Theme\">\n                  <IconButton onClick={() => setDark(prev => !prev)}>\n                    {dark ? <Brightness6 /> : <Brightness7 />}\n                  </IconButton>\n                </Tooltip>\n                <Typography variant=\"h6\" component=\"label\" />\n              </div>\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n};\n\nexport default Navbar;\n","import React from \"react\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { Card, CardContent, Typography, Box, useMediaQuery } from \"@material-ui/core\"\n\nconst Idea = ({ author, projectName, contactInfo, projectDescription, tagsString}) => {\n    const useStyles = makeStyles({\n        card: {\n            margin: \"20px\"\n        }\n    })\n    const styles = useStyles()\n    return (\n        <Card className={styles.card}>\n            <CardContent>\n                <Typography variant=\"h4\" component=\"h1\">\n                    {projectName}\n                </Typography>\n                <Typography variant=\"subheader1\" component=\"p\">\n                    By: {author}\n                </Typography>\n                <Typography variant=\"subheader1\" component=\"p\">\n                    Contact info: {contactInfo}\n                </Typography>\n                <Typography variant=\"subheader1\" component=\"p\">\n                    Project Description: {projectDescription}\n                </Typography>\n\n                <Typography variant=\"subheader1\" component=\"p\">\n                    Tags: {tagsString}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst Ideas = ({ list }) => {\n    const theme = useTheme();\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const md = useMediaQuery(theme.breakpoints.up('md'));\n    const lg = useMediaQuery(theme.breakpoints.up('lg'));\n    const xl = useMediaQuery(theme.breakpoints.up('xl'));\n    const getGridColumns = () => {\n        if(xl)\n            return \"20% 20% 20% 20% 20%\"\n        if(lg)\n            return \"33% 33% 34\"\n        if(md)\n            return \"50% 50%\"\n        if(sm)\n            return \"100%\"\n        return \"20% 20% 20% 20% 20%\"\n    }\n\n    return (\n        <Box\n            display=\"grid\"\n            gridTemplateColumns={getGridColumns()}\n        >\n            {list && list.map((x,index) => <Idea key={index} {...x} />)}\n        </Box>\n    )\n}\n\nexport default Ideas\n","export const postProject = (project) =>\n    fetch(\"/projects\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(project)\n    })\nexport const getProjects = () =>\n    fetch(\"/projects\").then((response) => response.json())\nexport const getTags = () => fetch(\"/popular/20\").then((res) => res.json())\nexport const getProjectsUsingTags = (tags) => fetch(\"/search/\" + tags.join(\"_\")).then(res => res.json())\n","import React, { useState, useEffect } from \"react\"\nimport ProjectList from \"../components/ProjectList\"\nimport { Typography, Box, Chip, TextField, Avatar } from \"@material-ui/core\"\nimport { Autocomplete} from \"@material-ui/lab\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { getProjects, getTags, getProjectsUsingTags } from \"api-requests\"\nconst useStyles = makeStyles((theme) => ({\n    tagSelect: {\n        margin: theme.spacing(2)\n    }\n} ))\nconst Home = () => {\n    const [data, setData] = useState([])\n    const [tags, setTags] = useState([])\n    const [selTags, setSelTags] = useState([])\n    const classes = useStyles()\n\n    useEffect(() => {\n        getProjects().then((json) => setData(Object.values(json)))\n        getTags().then(json => setTags(json.tags))\n    },[])\n    useEffect(() => {\n        if(selTags.length === 0) {\n            getProjects().then((json) => setData(Object.values(json)))\n        } else {\n            getProjectsUsingTags(selTags.map(tag => tag.name)).then(json => setData(Object.values(json)))\n        }\n    }, [selTags])\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"h2\" component=\"h1\" align=\"center\">\n                Projects\n            </Typography>\n            <Autocomplete\n                multiple\n              className={classes.tagSelect}\n                value={selTags}\n                options={tags}\n                getOptionLabel={tag => tag.name}\n                onChange={(_,value) => setSelTags(value)}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip avatar={<Avatar>{option.count}</Avatar>} variant=\"outlined\" label={option.name} {...getTagProps({ index })} />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        variant=\"standard\"\n                        label=\"Tags\"\n                        placeholder=\"Add a Tag\"\n                    />\n                )}\n            />\n            <ProjectList list={data} />\n        </Box>\n    )\n}\n\nexport default Home\n","import React, { useEffect, useState } from \"react\"\nimport { TextField, Button, Typography, Chip, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { getTags } from \"api-requests\"\n\n// TODO Notify the user if the form is submitted or if there's an error\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        paddingTop: theme.spacing(2),\n        maxWidth: \"50%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignSelf: \"center\",\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: \"75%\"\n        },\n    },\n    formItem: {\n        marginBottom: theme.spacing(2)\n    },\n    header: {\n        marginBottom: theme.spacing(2),\n        textAlign: \"center\"\n    }\n}))\n\nconst PostForm = ({ submitForm }) => {\n    //      example tags: [\n    //   {\n    //     \"count\": 2,\n    //     \"name\": \"cs\"\n    //   },\n    //   {\n    //     \"count\": 1,\n    //     \"name\": \"math\"\n    //   },\n    //   {\n    //     \"count\": 1,\n    //     \"name\": \"dance\"\n    //   }\n    // ]\n    const { control, handleSubmit, formState } = useForm()\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n    const [tags, setTags] = useState([])\n    // const exampleForm = {\n    //     author: \"\",\n    //     projectName: \"\",\n    //     projectDescription: \"\",\n    //     contactInfo: \"\",\n    //     tags: \"\"\n    // }\n    const classes = useStyles()\n    // TODO get tags from most populatr tags\n\n    // const tags = [\"Art\", \"ComputerScience\", \"ElectricalEngineering\", \"Film\", \"MechanicalEngineering\", \"Music\", \"Photography\", \"Physics\", \"SoftwareEngineering\"]\n    useEffect(() => {\n        getTags().then(body => setTags(body.tags))\n    }, [])\n\n\n\n    return (\n        <form className={classes.form} onSubmit={handleSubmit(submitForm)}>\n            <Typography className={classes.header} component=\"h1\" variant={mobile ? \"h3\" : \"h2\"}>\n                Create Project\n            </Typography>\n            <Controller\n                name=\"author\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Author is required\" }}\n                render={({ field, fieldState: { error } }) => {\n                    return (\n                        <TextField\n                            {...field}\n                            error={error}\n                            helperText={error ? error.message : null}\n                            className={classes.formItem}\n                            label={\"Author\"}\n                            variant=\"outlined\"\n                        />\n                    )\n                }}\n            />\n            <Controller\n                name=\"projectName\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Project Name is Required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <TextField\n                        {...field}\n                        className={classes.formItem}\n                        error={error}\n                        helperText={error ? error.message : null}\n                        label={\"Project Name\"}\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n            <Controller\n                name=\"projectDescription\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Project Description is Required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <TextField\n                        {...field}\n                        className={classes.formItem}\n                        error={error}\n                        helperText={error ? error.message : null}\n                        label={\"Project Description\"}\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n            <Controller\n                name=\"contactInfo\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Contact Info is required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <TextField\n                        {...field}\n                        error={error}\n                        className={classes.formItem}\n                        helperText={\n                            error !== undefined\n                                ? error.message\n                                : \"Email, Discord, Phone, etc\"\n                        }\n                        label={\"Contact Information\"}\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n\n            <Controller\n                name=\"tags\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Tags is required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <Autocomplete\n                        {...field}\n                        multiple\n                        value={field.value.length === 0 ? [] : field.value.split(\" \")}\n                        freeSolo\n                        options={tags.map((option) => option.name)}\n                        onChange={(_, value) => field.onChange(value.join(\" \"))}\n                        renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                                <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                            ))\n                        }\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                variant=\"standard\"\n                                error={error}\n                                helperText={\n                                    error !== undefined\n                                        ? error.message\n                                        : \"Help people find your project! Example tags: Coding, Cooking, etc\"\n                                }\n                                label=\"Tags\"\n                                placeholder=\"Add a Tag\"\n                            />\n                        )}\n                    />\n                )}\n            />\n\n            <Button disabled={formState.isSubmitting} variant=\"contained\" color=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n        </form>\n    )\n}\nexport default PostForm\n","import React, { useState, useEffect } from \"react\"\nimport PostForm from \"../components/PostForm\"\nimport Collapse from '@material-ui/core/Collapse';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {  postProject } from \"api-requests\"\n\nconst useStyles = makeStyles((theme) => ({\n    postPage: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\"\n    },\n    collasp: {\n        width: '50',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}))\nconst CreatePost = () => {\n    const [successAlert, setSuccess] = useState(false)\n    const [failAlert, setFailAlert] = useState(false)\n    const submitForm = (project) => {\n        // console.log(project)\n        postProject(project).then((res) => {\n            if (res.status === 200) { setSuccess(true) }\n            else {\n                setFailAlert(true)\n            }\n        })\n    }\n    const classes = useStyles()\n    return (\n        <div className={classes.postPage}>\n            <Collapse className={classes.collasp} in={successAlert}>\n                <Alert\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setSuccess(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    Project creation success! Feel free to create more projects or go back to browse some projects.\n                </Alert>\n            </Collapse>\n            <Collapse className={classes.collasp} in={failAlert}>\n                <Alert\n                    severity=\"error\"\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setFailAlert(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    Project creation failure! Please try again later.\n                </Alert>\n            </Collapse>\n            <PostForm submitForm={submitForm} />\n        </div>\n    )\n}\n\nexport default CreatePost\n","import React from 'react'\nimport { Typography, Box } from \"@material-ui/core\"\n\nconst About = () => {\n \n    return (\n        <Box display=\"flex\" flexDirection=\"column\" >\n            <Typography variant=\"h2\" component=\"h1\" align=\"center\">About</Typography>\n        </Box>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport { Typography, Box } from \"@material-ui/core\"\n\nconst Help = () => {\n \n    return (\n        <Box display=\"flex\" flexDirection=\"column\" >\n            <Typography variant=\"h2\" component=\"h1\" align=\"center\">Help</Typography>\n        </Box>\n    )\n}\n\nexport default Help\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nconst theme = (dark) => createMuiTheme({\n  palette: {\n    type: dark ?  \"dark\" : \"light\",\n    primary: {\n      main: teal[600],\n    },\n    secondary: {\n      main: green[500],\n    },\n    // background: {\n    //   default: teal[200],\n    //   // set the paper theme to slightly lighter than the default background\n    //   paper: teal[100]\n    // }\n  },\n\n});\nexport default theme\n","import { useState } from \"react\"\nimport NavBar from './components/NavBar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/Home';\nimport CreatePost from './pages/CreatePost';\nimport About from './pages/About'\nimport Help from './pages/Help'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"theme\"\nimport { CssBaseline, useMediaQuery } from '@material-ui/core';\n\nfunction App() {\n  const [dark, setDark] = useState(true)\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  return (\n    <ThemeProvider theme={theme(prefersDarkMode && dark)}>\n      <CssBaseline/>\n      <Router>\n        <NavBar setDark={setDark} dark={dark} />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/createPost\" exact component={CreatePost} />\n          <Route path=\"/about\" exact component={About} />\n          <Route path=\"/help\" exact component={Help} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}