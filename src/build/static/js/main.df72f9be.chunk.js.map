{"version":3,"sources":["components/NavBar/Drawer.js","components/NavBar/index.js","components/ProjectList/index.js","api-requests/index.js","pages/Home.js","components/PostForm/index.jsx","pages/CreatePost.js","photos/thanawat.jpg","photos/kevin.png","photos/kenneth.jpg","photos/alon.jpeg","components/AboutUsBlock/index.jsx","pages/OurTeam.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","minWidth","TemporaryDrawer","open","setOpen","dark","setDark","classes","Drawer","anchor","onClose","prev","className","role","List","ListItem","button","onClick","component","Link","to","ListItemIcon","ListItemText","primary","theme","root","flexGrow","toolbar","display","justifyContent","menuButton","marginRight","spacing","title","textDecoration","color","Navbar","useState","useTheme","mobile","useMediaQuery","breakpoints","down","AppBar","position","Toolbar","Typography","variant","IconButton","Button","Tooltip","Idea","author","projectName","contactInfo","projectDescription","tagsString","styles","card","margin","Card","CardContent","Ideas","sm","md","up","lg","Box","gridTemplateColumns","map","x","index","getProjects","fetch","then","response","json","getTags","res","tagSelect","marginTop","description","marginLeft","Home","data","setData","tags","setTags","selTags","setSelTags","useEffect","Object","values","length","join","getProjectsUsingTags","tag","name","flexDirection","align","gutterBottom","Autocomplete","multiple","value","options","getOptionLabel","onChange","_","renderTags","getTagProps","option","Chip","avatar","Avatar","count","label","renderInput","params","TextField","multiline","placeholder","ProjectList","form","paddingTop","maxWidth","alignSelf","formItem","marginBottom","header","textAlign","PostForm","submitForm","useForm","reset","control","handleSubmit","formState","body","onSubmit","defaultValue","rules","required","render","field","error","fieldState","helperText","message","rows","undefined","split","freeSolo","disabled","isSubmitting","type","postPage","height","collasp","CreatePost","successAlert","setSuccess","failAlert","setFailAlert","Collapse","in","Alert","action","aria-label","size","fontSize","severity","project","method","headers","Accept","JSON","stringify","postProject","status","padding","image","alignItems","borderRadius","containerItem","lineHeight","link","AboutUsBlock","imageLink","src","loading","alt","AboutUsBlocks","thanawat","href","kevin","kenneth","alon","OurTeam","createMuiTheme","palette","main","teal","secondary","green","App","prefersDarkMode","appTheme","useMemo","ThemeProvider","CssBaseline","NavBar","path","exact","About","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df72f9be.chunk.js","sourcesContent":["import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Create from '@material-ui/icons/Create';\nimport Info from '@material-ui/icons/Info';\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { NavLink as Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n        minWidth: '40vw'\n    },\n});\n\nexport default function TemporaryDrawer({ open, setOpen, dark, setDark }) {\n    const classes = useStyles();\n    return (\n        <div>\n            <Drawer anchor=\"left\" open={open} onClose={() => setOpen(prev => !prev)}>\n                <div\n                    className={classes.fullList}\n                    role=\"presentation\"\n                >\n                    <List>\n                        <ListItem button onClick={() => setOpen(prev => !prev)} component={Link} to=\"/about\">\n                            <ListItemIcon><Info /></ListItemIcon>\n                            <ListItemText primary={\"Our Team\"} />\n                        </ListItem>\n                        <ListItem button onClick={() => setOpen(prev => !prev)} component={Link} to=\"/createPost\">\n                            <ListItemIcon><Create /></ListItemIcon>\n                            <ListItemText primary={\"Create Post\"} />\n                        </ListItem>\n                      <ListItem button onClick={() => setDark(prev => !prev)}>\n                            <ListItemIcon> {dark ? <Brightness6 /> : <Brightness7 />}</ListItemIcon>\n                            <ListItemText primary={`Set ${dark ? \"Light\" : \"Dark\" } Theme`} />\n                        </ListItem>\n                    </List>\n                </div>\n\n            </Drawer>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Drawer from \"./Drawer\"\n\nimport { NavLink as Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n}));\n\nconst Navbar = ({ setDark, dark }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false)\n  const theme = useTheme()\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"h6\" component={Link} to='/'>\n                We Connect\n          </Typography>\n          {\n            mobile &&\n            <>\n              <Drawer dark={dark} setDark={setDark} open={open} setOpen={() => setOpen(prev => !prev)} />\n              <IconButton onClick={() => setOpen(prev => !prev)}>\n                <Menu />\n              </IconButton>\n            </>\n          }\n\n          {\n            !mobile &&\n            <>\n              <div>\n                <Button color=\"inherit\" component={Link} to='createPost'>Create Post</Button>\n                <Button color=\"inherit\" component={Link} to='about'>Our Team</Button>\n                <Tooltip title=\"Set Dark Theme\">\n                  <IconButton onClick={() => setDark(prev => !prev)}>\n                    {dark ? <Brightness6 /> : <Brightness7 />}\n                  </IconButton>\n                </Tooltip>\n                <Typography variant=\"h6\" component=\"label\" />\n              </div>\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { Card, CardContent, Typography, Box, useMediaQuery } from \"@material-ui/core\"\n\nconst Idea = ({ author, projectName, contactInfo, projectDescription, tagsString}) => {\n    const useStyles = makeStyles({\n        card: {\n            margin: \"20px\"\n        }\n    })\n    const styles = useStyles()\n    return (\n        <Card className={styles.card}>\n            <CardContent>\n                <Typography variant=\"h4\" component=\"h1\">\n                    {projectName}\n                </Typography>\n                <Typography variant=\"subheader1\" component=\"p\">\n                    By: {author}\n                </Typography>\n                <Typography variant=\"subheader1\" component=\"p\">\n                    Contact info: {contactInfo}\n                </Typography>\n                <Typography variant=\"subheader1\" component=\"p\">\n                    Project Description: {projectDescription}\n                </Typography>\n\n                <Typography variant=\"subheader1\" component=\"p\">\n                    Tags: {tagsString}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst Ideas = ({ list }) => {\n    const theme = useTheme();\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const md = useMediaQuery(theme.breakpoints.up('md'));\n    const lg = useMediaQuery(theme.breakpoints.up('lg'));\n    // const xl = useMediaQuery(theme.breakpoints.up('xl'));\n    const getGridColumns = () => {\n        if(lg)\n            return \"20% 20% 20% 20% 20%\"\n        if(md)\n            return \"33% 33% 33%\"\n        if(sm)\n            return \"100%\"\n        return \"20% 20% 20% 20% 20%\"\n    }\n\n    return (\n        <Box\n            display=\"grid\"\n            gridTemplateColumns={getGridColumns()}\n        >\n            {list && list.map((x,index) => <Idea key={index} {...x} />)}\n        </Box>\n    )\n}\n\nexport default Ideas\n","export const postProject = (project) =>\n    fetch(\"/projects\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(project)\n    })\nexport const getProjects = () =>\n    fetch(\"/projects\").then((response) => response.json())\nexport const getTags = () => fetch(\"/popular/20\").then((res) => res.json())\nexport const getProjectsUsingTags = (tags) => fetch(\"/search/\" + tags.join(\"_\")).then(res => res.json())\n","import React, { useState, useEffect } from \"react\"\nimport ProjectList from \"../components/ProjectList\"\nimport { Typography, Box, Chip, TextField, Avatar, useMediaQuery } from \"@material-ui/core\"\nimport { Autocomplete} from \"@material-ui/lab\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { getProjects, getTags, getProjectsUsingTags } from \"api-requests\"\nconst useStyles = makeStyles((theme) => ({\n    tagSelect: {\n        margin: theme.spacing(2)\n    },\n    title: {\n        marginTop: \"1em\",\n    },\n    description: {        \n        [theme.breakpoints.up('sm')]: {\n            marginLeft: \"4em\",\n            marginRight: \"4em\",\n        },\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: \"1em\",\n            marginRight: \"1em\",\n        },\n\n    }\n} ))\nconst Home = () => {\n    const [data, setData] = useState([])\n    const [tags, setTags] = useState([])\n    const [selTags, setSelTags] = useState([])\n    const classes = useStyles()\n    const theme = useTheme();\n    const sm = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    useEffect(() => {\n        getProjects().then((json) => setData(Object.values(json)))\n        getTags().then(json => setTags(json.tags))\n    },[])\n    useEffect(() => {\n        if(selTags.length === 0) {\n            getProjects().then((json) => setData(Object.values(json)))\n        } else {\n            getProjectsUsingTags(selTags.map(tag => tag.name)).then(json => setData(Object.values(json)))\n        }\n    }, [selTags])\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Typography className={classes.title} variant={sm ? \"h3\" : \"h2\"} component=\"h1\" align=\"center\" gutterBottom>\n                Welcome to We Connect!\n            </Typography>\n            <Typography className={classes.description} variant=\"p1\" component=\"p1\" align=\"center\">\n                Our web app provides a platform for users to share ideas and create team-based projects around them.\n                If you want to work on a project, but don't have any ideas, \n                browse the list of posts other users have made below and try contacting the author. \n                If you have specific interests, try using our tag search directly below.\n                If you're set on a project idea and are looking for colloborators, then create your own post and encourage users to contact you.\n            </Typography>\n            <Autocomplete\n                multiple\n              className={classes.tagSelect}\n                value={selTags}\n                options={tags}\n                getOptionLabel={tag => tag.name}\n                onChange={(_,value) => setSelTags(value)}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip avatar={<Avatar>{option.count}</Avatar>} variant=\"outlined\" label={option.name} {...getTagProps({ index })} />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        variant=\"standard\"\n                        label=\"Tags\"\n                        multiline\n                        placeholder=\"Press enter or click on a tag to add a Tag\"\n                    />\n                )}\n            />\n            <ProjectList list={data} />\n        </Box>\n    )\n}\n\nexport default Home\n","import React, { useEffect, useState } from \"react\"\nimport { TextField, Button, Typography, Chip, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { getTags } from \"api-requests\"\n\n// TODO Notify the user if the form is submitted or if there's an error\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        paddingTop: theme.spacing(2),\n        maxWidth: \"50%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignSelf: \"center\",\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: \"75%\"\n        },\n    },\n    formItem: {\n        marginBottom: theme.spacing(2)\n    },\n    header: {\n        marginBottom: theme.spacing(2),\n        textAlign: \"center\"\n    }\n}))\n\nconst PostForm = ({ submitForm }) => {\n    //      example tags: [\n    //   {\n    //     \"count\": 2,\n    //     \"name\": \"cs\"\n    //   },\n    //   {\n    //     \"count\": 1,\n    //     \"name\": \"math\"\n    //   },\n    //   {\n    //     \"count\": 1,\n    //     \"name\": \"dance\"\n    //   }\n    // ]\n    const { reset, control, handleSubmit, formState } = useForm()\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n    const [tags, setTags] = useState([])\n    // const exampleForm = {\n    //     author: \"\",\n    //     projectName: \"\",\n    //     projectDescription: \"\",\n    //     contactInfo: \"\",\n    //     tags: \"\"\n    // }\n    const classes = useStyles()\n    // TODO get tags from most populatr tags\n\n    // const tags = [\"Art\", \"ComputerScience\", \"ElectricalEngineering\", \"Film\", \"MechanicalEngineering\", \"Music\", \"Photography\", \"Physics\", \"SoftwareEngineering\"]\n    useEffect(() => {\n        getTags().then(body => setTags(body.tags))\n    }, [])\n\n\n\n    return (\n        <form className={classes.form} onSubmit={handleSubmit(submitForm(reset))}>\n            <Typography className={classes.header} component=\"h1\" variant={mobile ? \"h3\" : \"h2\"}>\n                Create Project\n            </Typography>\n            <Controller\n                name=\"author\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Author is required\" }}\n                render={({ field, fieldState: { error } }) => {\n                    return (\n                        <TextField\n                            {...field}\n                            error={error}\n                            helperText={error ? error.message : null}\n                            className={classes.formItem}\n                            label={\"Author\"}\n                            variant=\"outlined\"\n                        />\n                    )\n                }}\n            />\n            <Controller\n                name=\"projectName\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Project Name is Required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <TextField\n                        {...field}\n                        className={classes.formItem}\n                        error={error}\n                        helperText={error ? error.message : null}\n                        label={\"Project Name\"}\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n            <Controller\n                name=\"projectDescription\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Project Description is Required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <TextField\n                        {...field}\n                        className={classes.formItem}\n                        error={error}\n                        multiline\n                        rows={3}\n                        helperText={error ? error.message : null}\n                        label={\"Project Description\"}\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n            <Controller\n                name=\"contactInfo\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Contact Info is required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <TextField\n                        {...field}\n                        error={error}\n                        className={classes.formItem}\n                        helperText={\n                            error !== undefined\n                                ? error.message\n                                : \"Email, Discord, Phone, etc\"\n                        }\n                        label={\"Contact Information\"}\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n\n            <Controller\n                name=\"tags\"\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: \"Tags is required\" }}\n                render={({ field, fieldState: { error } }) => (\n                    <Autocomplete\n                        {...field}\n                        multiple\n                        value={field.value.length === 0 ? [] : field.value.split(\" \")}\n                        freeSolo\n                        options={tags.map((option) => option.name)}\n                        onChange={(_, value) => field.onChange(value.join(\" \"))}\n                        renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                                <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                            ))\n                        }\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                variant=\"standard\"\n                                error={error}\n                                multiline\n                                helperText={\n                                    error !== undefined\n                                        ? error.message\n                                        : \"Help people find your project! Tags can't have spaces. Example tags: Coding, Cooking, etc\"\n                                }\n                                label=\"Tags\"\n                                placeholder=\"Click on a tag or press enter to add tag\"\n                            />\n                        )}\n                    />\n                )}\n            />\n\n            <Button disabled={formState.isSubmitting} variant=\"contained\" color=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n        </form>\n    )\n}\nexport default PostForm\n","import React, { useState } from \"react\"\nimport PostForm from \"../components/PostForm\"\nimport Collapse from '@material-ui/core/Collapse';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {  postProject } from \"api-requests\"\n\nconst useStyles = makeStyles((theme) => ({\n    postPage: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\"\n    },\n    collasp: {\n        width: '50',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}))\nconst CreatePost = () => {\n    const [successAlert, setSuccess] = useState(false)\n    const [failAlert, setFailAlert] = useState(false)\n    const submitForm = (reset) => (project) => {\n        // console.log(project)\n        postProject(project).then((res) => {\n            if (res.status === 200) {\n                setSuccess(true)\n                reset({ author: project.author, tags: [] })\n\n            } else {\n                setFailAlert(true)\n            }\n        })\n    }\n    const classes = useStyles()\n    return (\n        <div className={classes.postPage}>\n            <Collapse className={classes.collasp} in={successAlert}>\n                <Alert\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setSuccess(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    Project creation success! Feel free to create more projects or go back to browse some projects.\n                </Alert>\n            </Collapse>\n            <Collapse className={classes.collasp} in={failAlert}>\n                <Alert\n                    severity=\"error\"\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setFailAlert(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    Project creation failure! Please try again later.\n                </Alert>\n            </Collapse>\n            <PostForm submitForm={submitForm} />\n        </div>\n    )\n}\n\nexport default CreatePost\n","export default __webpack_public_path__ + \"static/media/thanawat.f6fb2b04.jpg\";","export default __webpack_public_path__ + \"static/media/kevin.e5db47d4.png\";","export default __webpack_public_path__ + \"static/media/kenneth.7adf4b01.jpg\";","export default __webpack_public_path__ + \"static/media/alon.574ea24c.jpeg\";","import React from 'react'\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { Card, CardContent, Typography, Box, useMediaQuery } from \"@material-ui/core\"\nimport thanawat from \"../../photos/thanawat.jpg\"\nimport kevin from \"../../photos/kevin.png\"\nimport kenneth from \"../../photos/kenneth.jpg\"\nimport alon from \"../../photos/alon.jpeg\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            padding: \"0px 50px 50px 50px\",\n            width: \"75%\",\n            margin: \"50px\",\n          },\n          [theme.breakpoints.down('sm')]: {\n            padding: \"0px 5px 50px 5px\",\n            width: \"100%\",\n            marginTop: \"50px\",\n          },\n        borderRadius: \"2.5%\",\n        height: \"100%\",\n    },\n    image: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderRadius: \"10%\",\n    },\n\n    containerItem: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        paddingTop: \"25px\",\n        [theme.breakpoints.up('sm')]: {\n            lineHeight: \"26pt\"\n          }\n    },\n    link: {\n        textDecoration: 'underline',\n        color: 'inherit',\n    },\n}))\n\nconst AboutUsBlock = ( {imageLink, name, description} ) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const sm = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Card className={classes.root}>\n            <CardContent className={classes.containerItem}> \n                <img \n                    className={classes.image}\n                    src={imageLink}\n                    height={sm ? \"300\" : \"400\"}\n                    width={sm ? \"300\" : \"400\"}\n                    loading=\"lazy\"\n                    alt=\"Avatar\"\n                />\n            </CardContent>\n            <CardContent className={classes.containerItem}>\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                        {name}\n                    </Typography>\n                    <Typography variant=\"p\" component=\"p\">\n                        {description}\n                    </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst AboutUsBlocks = ({ list }) => {\n    list = [\n        {\n            imageLink: thanawat,\n            name: \"Thanawat Techaumnuaiwit\", \n            description:\n            <div>\n            <Typography gutterBottom>\n            I'm interested in mainly Functional Languages(Haskell), Web Development, the Linux operating system(Using Nixos rn) or anything in the field of CS that I find fun! My favorite Text editor is Emacs, and without Emacs, I don't think I'd be where I am today. \n            I am a Free(as in Freedom) Software enthusiast, and I do have to make some comprimises here or there(Obviously I have to use Slack and Zoom for school, and some open source committees use discord, and of course, I can't live without youtube). \n            In the summer, I am looking forward to  learn more about microarchitectures and embedded system, mentoring kids at my old robotics team, and doing development using Haskell! Hopefully I can get to contribute to some open source projects, but I do need to build some confidence first.\n            </Typography>\n            <Typography>\n            You can find more of my adventures on my website, where I update it every year, and post stuff like yearly self-reflections and tutorials on Emacs(not very good though): <a className={useStyles().link} href=\"https://thanawat.xyz/\">https://thanawat.xyz/</a>. \n            My github(and gitlab) profile is @thiskappisgrey. You can find my other socials(lmy email, still working on moving away from gmail and maybe setting up my own email server or using some \"private\" service) on my website when I update them. I don't use social media(I quit using them about a year ago, it's been great).\n            </Typography></div>,    \n        },\n        {\n            imageLink: \"https://mma.prnewswire.com/media/1346408/Pringles_Logo.jpg?p=facebook\",\n            name: \"Surendra Ghentiyala\", \n            description: \n            <Typography>\n            My name is Surendra Ghentiyala. I'm a CS major. I'm interested in verification and programming language theory. In the future, no idea.\n            </Typography>,\n        },\n        {\n            imageLink: kevin,\n            name: \"Kevin Hoang\", \n            description: \n            <div>\n            <Typography gutterBottom>\n            I'm interested in software engineering and to eventually develop for a larger corporation in the future. I'm currently trying out various specializations such as machine learning and cybersecurity in school, but I haven't found one that particularly stood out to me yet. Over the summer, I am likely going to teach kids computer science basics, and I hope to use the money to finally build a functional computer that can keep up with modern hardware demands for both development and gaming in my spare time. Otherwise, in the near future, I will begin looking for internships near the school to start getting some industry experience and building up my resume to start up my career.\n            </Typography>\n            <Typography>\n            Email: kevinhoang1800@gmail.com, Github: khoang1800\n            </Typography></div>,\n        },\n        {\n            imageLink: kenneth,\n            name: \"Kenneth Deng\", \n            description: \n            <Typography>\n            Hello, my name is Kenneth and though I'm a Computer Science major, I don’t really have a particular field of Computer Science that I am interested in. During the pandemic, I grew interested in drawing and spent time learning and developing a passion for it. For the coming summer, I plan to invest time into learning and practicing drawing and digital painting. At the same time, I also want to work on personal programming projects. Taking this class made me realize that I need to be more invested in developing programming skills and experience. In the future, I hope to combine and utilize both skills so that I can design and conceptualize games.\n            </Typography>,\n        },\n        {\n            imageLink: alon,\n            name: \"Alon Katz\", \n            description: \n            <Typography>\n            Hello my name is Alon Katz, I am a second year CS major. At this point, I have no clue what interests me in computer science. I am currently doing an internship in a company that works in developing software for network and internet companies - so see how that goes. Back in high school I played a good amount with iOS development and Java. After I graduate I actually want to take a few years off before starting to work in order to travel and dip my toe in the film industry (cuz thats where are all the money is at - thats joke). And a bit about me is that I like to travel, play guitar on my balcony, cook, and watch a lot of movies.\n            </Typography>,\n        },\n    ]\n\n    return (\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n        \n        >\n            {list && list.map((x) => <AboutUsBlock {...x} />)}\n        </Box>\n    )\n}\n\nexport default AboutUsBlocks\n\n/*\n{\n    imageLink: \"https://wow.zamimg.com/uploads/screenshots/normal/935652.jpg\",\n    name: \"Mr. Pringles Man\", \n    description: \n    <Typography>\n    I'm a simple man. My potato chips are crispy, delicious, and quite exquisite. \n    My eyes may seem lifeless, but I feel great. In fact, I'm a completely changed man.\n    The people who don't believe me are just haters. But you know what they say, haters\n    are my motivators. Click <a className={useStyles().link} href=\"https://www.pringles.com/us/home.html\">here</a> if \n    you want to learn more about me.\n    </Typography>,\n},\n{\n    imageLink: \"https://mma.prnewswire.com/media/1346408/Pringles_Logo.jpg?p=facebook\",\n    name: \"Mr. Pringles Man\", \n    description: \n    <Typography>\n    I'm a simple man. My potato chips are crispy, delicious, and quite exquisite. \n    My eyes may seem lifeless, but I feel great. In fact, I'm a completely changed man.\n    The people who don't believe me are just haters. But you know what they say, haters\n    are my motivators. Click <a className={useStyles().link} href=\"https://www.pringles.com/us/home.html\">here</a> if \n    you want to learn more about me.\n    </Typography>,\n},\n*/\n","import React from 'react'\nimport AboutUsBlocks from '../components/AboutUsBlock'\nimport { Typography, Box } from \"@material-ui/core\"\n\nconst OurTeam = () => {\n \n    return (\n        <Box display=\"flex\" flexDirection=\"column\" >\n            <Typography variant=\"h2\" component=\"h1\" align=\"center\">Our Team</Typography>\n            <AboutUsBlocks/>\n        </Box>\n    )\n}\n\nexport default OurTeam\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nconst theme = (dark) => createMuiTheme({\n  palette: {\n    type: dark ?  \"dark\" : \"light\",\n    primary: {\n      main: teal[600],\n    },\n    secondary: {\n      main: green[500],\n    },\n    // background: {\n    //   default: teal[200],\n    //   // set the paper theme to slightly lighter than the default background\n    //   paper: teal[100]\n    // }\n  },\n\n});\nexport default theme\n","import { useState, useMemo, useEffect } from \"react\"\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport CreatePost from './pages/CreatePost';\nimport About from './pages/OurTeam'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"theme\"\nimport { CssBaseline, useMediaQuery } from '@material-ui/core';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [dark, setDark] = useState(false)\n  useEffect(() => {\n    setDark(prefersDarkMode)\n  }, [prefersDarkMode])\n  const appTheme = useMemo(\n    () =>\n      theme(dark),\n    [dark],\n  );\n\n  return (\n    <ThemeProvider theme={appTheme}>\n      <CssBaseline />\n      <Router>\n        <NavBar setDark={setDark} dark={dark} />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/createPost\" exact component={CreatePost} />\n          <Route path=\"/about\" exact component={About} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}